{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","App.js","index.js","App.module.css","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kFACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,mOCuDpJC,EAhDD,SAAC,GAA0D,IAAD,IAAvDC,KAAOC,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,WAElD,OADAC,QAAQC,IAAIL,GACRA,EAIA,qBAAKM,UAAWC,IAAOC,UAAvB,SACI,eAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,SAApC,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAM,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOY,UAA/E,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAA9C,oCACA,cAACF,EAAA,EAAD,CAAYG,QAAQ,KAApB,SACI,cAAC,IAAD,CAASC,MAAO,EAAGC,IAAK1B,EAAU2B,MAAOC,SAAU,IAAIC,UAAU,QAErE,eAACR,EAAA,EAAD,CAAYC,MAAM,gBAAlB,cAAoC,IAAIQ,KAAK3B,GAAY4B,eAAzD,OACA,cAACV,EAAA,EAAD,CAAYG,QAAQ,QAApB,qDAGR,cAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAM,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAON,WAA/E,SACI,eAACmB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAA9C,sCACA,cAACF,EAAA,EAAD,CAAYG,QAAQ,KAApB,SACI,cAAC,IAAD,CAASC,MAAO,EAAGC,IAAKzB,EAAU0B,MAAOC,SAAU,IAAIC,UAAU,QAErE,eAACR,EAAA,EAAD,CAAYC,MAAM,gBAAlB,cAAoC,IAAIQ,KAAK3B,GAAY4B,eAAzD,OACA,cAACV,EAAA,EAAD,CAAYG,QAAQ,QAApB,mDAGR,cAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAM,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOL,QAA/E,SACI,eAACkB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAA9C,iCACA,cAACF,EAAA,EAAD,CAAYG,QAAQ,KAApB,SACI,cAAC,IAAD,CAASC,MAAO,EAAGC,IAAKxB,EAAOyB,MAAOC,SAAU,IAAIC,UAAU,QAElE,eAACR,EAAA,EAAD,CAAYC,MAAM,gBAAlB,cAAoC,IAAIQ,KAAK3B,GAAY4B,eAAzD,OACA,cAACV,EAAA,EAAD,CAAYG,QAAQ,QAApB,wDAhCT,c,yBCRTQ,EAAM,iCAGCC,EAAS,uCAAG,WAAMC,GAAN,2BAAAC,EAAA,6DACjBC,EAAeJ,EACfE,IACAE,EAAY,UAAMJ,EAAN,sBAAuBE,IAHlB,kBAOoDG,IAAMC,IAAIF,GAP9D,2BAOTrC,KAAQC,EAPC,EAODA,UAAWC,EAPV,EAOUA,UAAWC,EAPrB,EAOqBA,OAAQC,EAP7B,EAO6BA,WAP7B,kBAWV,CAAEH,YAAWC,YAAWC,SAAQC,eAXtB,4FAAH,sDAqBToC,EAAc,uCAAG,gCAAAJ,EAAA,+EAECE,IAAMC,IAAN,UAAaN,EAAb,WAFD,uBAEdjC,EAFc,EAEdA,KAEFyC,EAAezC,EAAK0C,KAAI,SAACC,GAAD,MAAgB,CAC1C1C,UAAW0C,EAAU1C,UAAU2C,MAC/BzC,OAAQwC,EAAUxC,OAAOyC,MACzBC,KAAMF,EAAUG,eAPE,kBAUfL,GAVe,yFAAH,qDAgBdM,EAAc,uCAAG,8BAAAX,EAAA,+EAEgBE,IAAMC,IAAN,UAAaN,EAAb,eAFhB,uBAENe,EAFM,EAEdhD,KAAQgD,UAFM,kBAIfA,EAAUN,KAAI,SAACP,GAAD,OAAaA,EAAQc,SAJpB,yFAAH,qD,yBCoCZC,EA1ED,SAAC,GAAsD,IAAD,IAApDlD,KAAQC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,OAASgC,EAAa,EAAbA,QAAa,EAC7BgB,mBAAS,IADoB,mBACzDR,EADyD,KAC9CS,EAD8C,KAGhEC,qBAAU,YACQ,uCAAG,sBAAAjB,EAAA,kEACZgB,EADY,SACOZ,IADP,6EAAH,qDAIdc,KAEF,IAEF,IAAMC,EACFZ,EAAUa,OAEF,cAAC,OAAD,CACIxD,KAAS,CACLyD,OAAQd,EAAUD,KAAI,qBAAGG,QACzBa,SAAU,CAAC,CACP1D,KAAM2C,EAAUD,KAAI,qBAAGzC,aACvB0D,MAAO,WACPC,YAAa,UACbC,MAAM,GAEV,CAEI7D,KAAM2C,EAAUD,KAAI,qBAAIvC,UACxBwD,MAAO,SACPC,YAAa,MACbE,gBAAiB,qBACjBD,MAAM,OAKZ,KAIZE,EACF9D,EAEQ,cAAC,MAAD,CACID,KAAM,CACFyD,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CAAC,CACPC,MAAO,SACPG,gBAAiB,CACb,uBACA,uBACA,wBAEJ9D,KAAM,CAACC,EAAU2B,MAAO1B,EAAU0B,MAAOzB,EAAOyB,UAIxDoC,QAAS,CACLC,OAAQ,CAACC,SAAS,GAClBC,MAAO,CAACD,SAAS,EAAME,KAAK,oBAAD,OAAsBjC,OAKzD,KAGZ,OACI,qBAAK5B,UAAWC,IAAOC,UAAvB,SACK0B,EAAU4B,EAAWR,K,mCCzCnBc,EA1BO,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,oBAAyB,EACInB,mBAAS,IADb,mBACrCoB,EADqC,KACnBC,EADmB,KAgB5C,OAZDnB,qBAAU,YACQ,uCAAG,sBAAAjB,EAAA,kEACboC,EADa,SACazB,IADb,6EAAH,qDAKdO,KAGF,CAACkB,IAIC,cAACC,EAAA,EAAD,CAAalE,UAAWC,IAAOkE,YAA/B,SACI,eAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAQR,EAAoBQ,EAAEC,OAAOnD,QAA7E,UACI,wBAAQA,MAAM,GAAd,iCACX2C,EAAiB7B,KAAI,SAACP,EAAS6C,GAAV,OAAgB,wBAAgBpD,MAAOO,EAAvB,SAAiCA,GAApB6C,Y,iBC1BxC,MAA0B,kCCkD1BC,E,4MAtCXC,MAAQ,CACJlF,KAAM,GACNmC,QAAS,I,EAWbmC,oB,uCAAsB,WAAOnC,GAAP,eAAAC,EAAA,sEAGQF,EAAUC,GAHlB,OAGZgD,EAHY,OAKlB,EAAKC,SAAS,CAAEpF,KAAMmF,EAAahD,QAASA,IAL1B,2C,wPANQD,I,OAApBiD,E,OAENE,KAAKD,SAAS,CAAEpF,KAAMmF,I,qIAahB,IAAD,EACqBE,KAAKH,MAAvBlF,EADH,EACGA,KAAMmC,EADT,EACSA,QAId,OACI,sBAAK5B,UAAcC,IAAOC,UAA1B,UACA,qBAAKF,UAAWC,IAAO8E,MAAOC,IAAKC,EAAaC,IAAI,aACpD,cAAC,EAAD,CAAOzF,KAASA,IAChB,cAAC,EAAD,CAAesE,oBAAqBe,KAAKf,sBACzC,cAAC,EAAD,CAAQtE,KAAMA,EAAMmC,QAASA,W,GAjCvBuD,IAAMC,WCPxBC,IAASC,OAAQ,cAAE,EAAF,IAAYC,SAASC,eAAe,U,mBCHrDlG,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,mBCA7DD,EAAOC,QAAU,CAAC,UAAY,4B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,sC","file":"static/js/main.199af9a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport styles from './Cards.module.css'\nimport CountUp from 'react-countup'\nimport cx from 'classnames'\n\n\n\nconst Cards = ({ data: {confirmed, recovered, deaths, lastUpdate }}) => {\n    console.log(confirmed)\n    if(!confirmed) {\n        return 'loading...';\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify='center'>\n                <Grid item component={Card} xs = {12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Infected &#x1F92E; </Typography>\n                        <Typography variant='h5'>\n                            <CountUp start={0} end={confirmed.value} duration={2.5}separator=','/>\n                        </Typography>\n                        <Typography color='textSecondary'> {new Date(lastUpdate).toDateString()} </Typography>\n                        <Typography variant='body2'>Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs = {12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom> Recovered ðŸ˜‡ </Typography>\n                        <Typography variant='h5'>\n                            <CountUp start={0} end={recovered.value} duration={2.5}separator=','/>\n                        </Typography>\n                        <Typography color='textSecondary'> {new Date(lastUpdate).toDateString()} </Typography>\n                        <Typography variant='body2'>Number of recoveries of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs = {12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Deaths &#x1F616;</Typography>\n                        <Typography variant='h5'>\n                            <CountUp start={0} end={deaths.value} duration={2.5}separator=','/>\n                        </Typography>\n                        <Typography color='textSecondary'> {new Date(lastUpdate).toDateString()} </Typography>\n                        <Typography variant='body2'>Number of deaths due to COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n\n\n        </div>\n\n\n        // <h1>Cards</h1>\n    )\n}\n\nexport default Cards","import axios from 'axios';\n\n\nconst url = 'https://covid19.mathdro.id/api';\n\n\nexport const fetchData = async(country) => {\n    let changableUrl = url;\n    if (country) {\n        changableUrl = `${url}/countries/${country}`;\n    }\n\n    try {\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changableUrl);\n\n\n\n        return { confirmed, recovered, deaths, lastUpdate };\n\n\n\n    } catch (error) {\n\n    }\n\n}\n\nexport const fetchDailyData = async() => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n\n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate\n        }))\n\n        return modifiedData;\n    } catch (error) {\n\n    }\n}\n\nexport const fetchCountries = async() => {\n    try {\n        const { data: { countries } } = await axios.get(`${url}/countries`);\n\n        return countries.map((country) => country.name)\n\n    } catch (error) {\n\n    }\n}","import React, { useState, useEffect} from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2'\nimport  styles from './Charts.module.css'\n\nconst Chart = ({data: { confirmed, recovered, deaths}, country}) => {\n    const [dailyData, setDailyData]  = useState([]);\n\n    useEffect(() =>  {\n        const fetchAPI = async () => {\n             setDailyData(await fetchDailyData());\n        } \n\n        fetchAPI();\n\n    },[]);\n\n    const lineChart = (\n        dailyData.length //0\n            ? (\n                <Line\n                    data =  {{\n                        labels: dailyData.map(({ date }) => date),\n                        datasets: [{\n                            data: dailyData.map(({ confirmed }) => confirmed),\n                            label: 'Infected',\n                            borderColor: \"#3333ff\",\n                            fill: true,\n                        }, \n                        {\n\n                            data: dailyData.map(( { deaths }) => deaths),\n                            label: 'Deaths',\n                            borderColor: \"red\",\n                            backgroundColor: \"rgba(255,0,0, 0.5)\",\n                            fill: true,\n                    }],\n\n                    }}\n                \n                />) : null\n\n        ); \n\n    const barChart = (\n        confirmed\n            ? (\n                <Bar \n                    data={{\n                        labels: ['infected', \"Recovered\", 'Deaths'],\n                        datasets: [{\n                            label: 'People',\n                            backgroundColor: [\n                                'rgba(0, 0, 255, 0.5)',\n                                'rgba(0, 255, 0, 0.5)',\n                                'rgba(255, 0, 0, 0.5)'\n                            ],\n                            data: [confirmed.value, recovered.value, deaths.value]\n                        }]\n\n                    }}\n                    options={{\n                        legend: {display: false},\n                        title: {display: true, text: `Current state in ${country}`},\n                    }}\n                    \n    \n                    />\n            ) : null\n    )\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n\n        </div>\n    )\n}\n\nexport default Chart","import React, { useState, useEffect  } from 'react';\nimport { NativeSelect, FormControl  } from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../api';\n\n\nconst CountryPicker = ({handleCountryChange}) => {\n    const [ fetchedCountries, setFetchedCountries] = useState([]);\n\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n\n        }\n\n        fetchAPI(); \n\n\n    },[setFetchedCountries]);\n\n\n     return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue='' onChange={(e)  => handleCountryChange(e.target.value)}>\n                <option value=''>Global &#x1F30F;</option>\n    {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>   )}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\n// import Cards from './components/Cards/Cards'\n// import Charts from './components/Charts/Chart'\n// import CountryPicker from './components/CountryPicker/CountryPicker'\n\n\nimport { Cards, Chart, CountryPicker } from './components'\nimport styles from './App.module.css';\nimport { fetchData } from './api';\nimport coronaImage from './images/image.png'\n\nclass App extends React.Component {\n    state = {\n        data: {},\n        country: '',\n\n    }\n\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n\n        this.setState({ data: fetchedData })\n\n    }\n\n    handleCountryChange = async (country) => {\n        // fetch data\n        //set the state\n        const fetchedData = await fetchData(country);\n\n        this.setState({ data: fetchedData, country: country });\n\n    }\n\n    render() {\n        const { data, country } = this.state;\n\n\n\n        return ( \n            <div className = { styles.container } >\n            <img className={styles.image} src={coronaImage} alt='COVID-19'/>\n            <Cards data = { data }/> \n            <CountryPicker handleCountryChange={this.handleCountryChange} / >\n            <Chart  data={data} country={country}/ >\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render( < App / > , document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1mZfu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};"],"sourceRoot":""}