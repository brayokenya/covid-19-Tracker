{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/briankiiru/Desktop/covid/src/components/Charts/Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Charts.module.css';\n\nconst Chart = ([data, country]) => {\n  _s();\n\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  });\n  const lineChart = dailyData.length //0\n  ?\n  /*#__PURE__*/\n  _jsxDEV(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: \"#3333ff\",\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: \"red\",\n        backgroundColor: \"rgba(255,0,0, 0.5)\",\n        fill: true\n      }]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 17\n  }, this) : null;\n  const barChart = data.confirmed ? /*#__PURE__*/_jsxDEV(Bar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 17\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: lineChart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chart, \"k/DxwZSu/1zHTtHlTKnhZOTCIIE=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/briankiiru/Desktop/covid/src/components/Charts/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","barChart","container"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAQC,MAAR,MAAoB,qBAApB;;AAEA,MAAMC,KAAK,GAAG,CAAC,CAACC,IAAD,EAAOC,OAAP,CAAD,KAAqB;AAAA;;AAC/B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA6BV,QAAQ,CAAC,EAAD,CAA3C;AAEAC,EAAAA,SAAS,CAAC,MAAO;AACb,UAAMU,QAAQ,GAAG,YAAY;AACxBD,MAAAA,YAAY,CAAC,MAAMR,cAAc,EAArB,CAAZ;AACJ,KAFD;;AAIAS,IAAAA,QAAQ;AAEX,GAPQ,CAAT;AASA,QAAMC,SAAS,GACXH,SAAS,CAACI,MAAV,CAAiB;AAAjB;AAAA;AAEQ,UAAC,IAAD;AACI,IAAA,IAAI,EAAK;AACLC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADH;AAELC,MAAAA,QAAQ,EAAE,CAAC;AACPV,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEG,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADC;AAEPC,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,SAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAMV;AAEId,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAc,CAAE;AAAEO,UAAAA;AAAF,SAAF,KAAiBA,MAA/B,CAFV;AAGIH,QAAAA,KAAK,EAAE,QAHX;AAIIC,QAAAA,WAAW,EAAE,KAJjB;AAKIG,QAAAA,eAAe,EAAE,oBALrB;AAMIF,QAAAA,IAAI,EAAE;AANV,OANU;AAFL;AADb;AAAA;AAAA;AAAA;AAAA,UAFR,GAsBc,IAvBlB;AA2BA,QAAMG,QAAQ,GACVjB,IAAI,CAACW,SAAL,gBAEQ,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,UAFR,GAGQ,IAJZ;AAOA,sBACI;AAAK,IAAA,SAAS,EAAEb,MAAM,CAACoB,SAAvB;AAAA,cACKb;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CApDD;;GAAMN,K;;KAAAA,K;AAsDN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2'\nimport  styles from './Charts.module.css'\n\nconst Chart = ([data, country]) => {\n    const [dailyData, setDailyData]  = useState([]);\n\n    useEffect(() =>  {\n        const fetchAPI = async () => {\n             setDailyData(await fetchDailyData());\n        } \n\n        fetchAPI();\n\n    });\n\n    const lineChart = (\n        dailyData.length //0\n            ? (\n                <Line\n                    data =  {{\n                        labels: dailyData.map(({ date }) => date),\n                        datasets: [{\n                            data: dailyData.map(({ confirmed }) => confirmed),\n                            label: 'Infected',\n                            borderColor: \"#3333ff\",\n                            fill: true,\n                        }, \n                        {\n\n                            data: dailyData.map(( { deaths }) => deaths),\n                            label: 'Deaths',\n                            borderColor: \"red\",\n                            backgroundColor: \"rgba(255,0,0, 0.5)\",\n                            fill: true,\n                    }],\n\n                    }}\n                \n                />) : null\n\n        ); \n\n    const barChart = (\n        data.confirmed\n            ? (\n                <Bar />\n            ) : null\n    )\n\n    return (\n        <div className={styles.container}>\n            {lineChart}\n\n        </div>\n    )\n}\n\nexport default Chart"]},"metadata":{},"sourceType":"module"}